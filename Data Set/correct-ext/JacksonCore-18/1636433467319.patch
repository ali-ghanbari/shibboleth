--- /src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java
+++ /src/main/java/com/fasterxml/jackson/core/base/GeneratorBase.java
@@ -50,6 +50,7 @@
      * 
      * @since 2.7.7
      */
+    protected final static int MAX_BIG_DECIMAL_SCALE = 9999;
     
     /*
     /**********************************************************
@@ -431,7 +432,16 @@
      * @since 2.7.7
      */
     protected String _asString(BigDecimal value) throws IOException {
+        if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)) {
             // 24-Aug-2016, tatu: [core#315] prevent possible DoS vector
+            int scale = value.scale();
+            if ((scale < -MAX_BIG_DECIMAL_SCALE) || (scale > MAX_BIG_DECIMAL_SCALE)) {
+                _reportError(String.format(
+"Attempt to write plain `java.math.BigDecimal` (see JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN) with illegal scale (%d): needs to be between [-%d, %d]",
+scale, MAX_BIG_DECIMAL_SCALE, MAX_BIG_DECIMAL_SCALE));
+            }
+            return value.toPlainString();
+        }
         return value.toString();
     }
 
--- /src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
+++ /src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java
@@ -907,10 +907,7 @@
         if (value == null) {
             _writeNull();
         } else  if (_cfgNumbersAsStrings) {
+            _writeQuotedRaw(_asString(value));
-            String raw = Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features) ? value.toPlainString() : value.toString();
-            _writeQuotedRaw(raw);
-        } else if (Feature.WRITE_BIGDECIMAL_AS_PLAIN.enabledIn(_features)) {
-            writeRaw(value.toPlainString());
         } else {
             writeRaw(_asString(value));
         }
--- /src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
+++ /src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java
@@ -684,10 +684,7 @@
         if (value == null) {
             _writeNull();
         } else  if (_cfgNumbersAsStrings) {
+            _writeQuotedRaw(_asString(value));
-            String raw = isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN) ? value.toPlainString() : value.toString();
-            _writeQuotedRaw(raw);
-        } else if (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)) {
-            writeRaw(value.toPlainString());
         } else {
             writeRaw(_asString(value));
         }
