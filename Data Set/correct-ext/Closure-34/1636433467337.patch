--- /src/com/google/javascript/jscomp/CodeGenerator.java
+++ /src/com/google/javascript/jscomp/CodeGenerator.java
@@ -119,9 +119,7 @@
         cc.addOp(opstr, true);
         addExpr(last, p, rhsContext);
       } else {
+        unrollBinaryOperator(n, type, opstr, context, rhsContext, p, p + 1);
-        addExpr(first, p, context);
-        cc.addOp(opstr, true);
-        addExpr(last, p + 1, rhsContext);
       }
       return;
     }
@@ -751,7 +749,7 @@
     Node current = firstNonOperator;
     do {
       current = current.getParent();
+      cc.addOp(opStr, true);
-      cc.listSeparator();
       addExpr(current.getFirstChild().getNext(), rightPrecedence, rhsContext);
     } while (current != n);
   }
--- /src/com/google/javascript/jscomp/CodePrinter.java
+++ /src/com/google/javascript/jscomp/CodePrinter.java
@@ -331,7 +331,7 @@
     @Override
     void appendOp(String op, boolean binOp) {
       if (binOp) {
+        if (getLastChar() != ' ' && op.charAt(0) != ',') {
-        if (getLastChar() != ' ') {
           append(" ");
         }
         append(op);
