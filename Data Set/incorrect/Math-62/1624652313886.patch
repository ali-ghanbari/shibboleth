diff -w -r -u Math62b/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java Math62b_Patch551/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java
--- /src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	2019-03-31 14:21:19.000000000 -0400
+++ /src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java	2019-03-31 15:31:12.000000000 -0400
@@ -229,7 +229,6 @@
                     } else if (fu <= fv ||
                                MathUtils.equals(v, x) ||
                                MathUtils.equals(v, w)) {
-                        v = u;
                         fv = fu;
                     }
                 }
diff -w -r -u Math62b/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java Math62b_Patch551/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java
--- /src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java	2019-03-31 14:21:22.000000000 -0400
+++ /src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer.java	2019-03-31 15:31:12.000000000 -0400
@@ -157,7 +157,7 @@
         // Multi-start loop.
         for (int i = 0; i < starts; ++i) {
             try {
-                final double bound1 = (i == 0) ? min : min + generator.nextDouble() * (max - min);
+                final double bound1 = min + generator.nextDouble() * (max - min);
                 final double bound2 = (i == 0) ? max : min + generator.nextDouble() * (max - min);
                 optima[i] = optimizer.optimize(f, goal, FastMath.min(bound1, bound2), FastMath.max(bound1, bound2));
             } catch (FunctionEvaluationException fee) {
