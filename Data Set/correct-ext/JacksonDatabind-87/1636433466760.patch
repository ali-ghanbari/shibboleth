--- /src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java
+++ /src/main/java/com/fasterxml/jackson/databind/util/StdDateFormat.java
@@ -44,6 +44,7 @@
      *
      * @since 2.8.10
      */
+    protected final static String DATE_FORMAT_STR_ISO8601_NO_TZ = "yyyy-MM-dd'T'HH:mm:ss.SSS";
 
     /**
      * ISO-8601 with just the Date part, no time
@@ -62,6 +63,7 @@
     protected final static String[] ALL_FORMATS = new String[] {
         DATE_FORMAT_STR_ISO8601,
         DATE_FORMAT_STR_ISO8601_Z,
+        DATE_FORMAT_STR_ISO8601_NO_TZ,
         DATE_FORMAT_STR_RFC1123,
         DATE_FORMAT_STR_PLAIN
     };
@@ -81,6 +83,7 @@
 
     protected final static DateFormat DATE_FORMAT_ISO8601;
     protected final static DateFormat DATE_FORMAT_ISO8601_Z;
+    protected final static DateFormat DATE_FORMAT_ISO8601_NO_TZ; // since 2.8.10
 
     protected final static DateFormat DATE_FORMAT_PLAIN;
 
@@ -99,6 +102,8 @@
         DATE_FORMAT_ISO8601.setTimeZone(DEFAULT_TIMEZONE);
         DATE_FORMAT_ISO8601_Z = new SimpleDateFormat(DATE_FORMAT_STR_ISO8601_Z, DEFAULT_LOCALE);
         DATE_FORMAT_ISO8601_Z.setTimeZone(DEFAULT_TIMEZONE);
+        DATE_FORMAT_ISO8601_NO_TZ = new SimpleDateFormat(DATE_FORMAT_STR_ISO8601_NO_TZ, DEFAULT_LOCALE);
+        DATE_FORMAT_ISO8601_NO_TZ.setTimeZone(DEFAULT_TIMEZONE);
         DATE_FORMAT_PLAIN = new SimpleDateFormat(DATE_FORMAT_STR_PLAIN, DEFAULT_LOCALE);
         DATE_FORMAT_PLAIN.setTimeZone(DEFAULT_TIMEZONE);
     }
@@ -129,6 +134,7 @@
     protected transient DateFormat _formatRFC1123;
     protected transient DateFormat _formatISO8601;
     protected transient DateFormat _formatISO8601_z;
+    protected transient DateFormat _formatISO8601_noTz; // 2.8.10
     protected transient DateFormat _formatPlain;
 
     /*
@@ -511,10 +517,10 @@
                 }
             } else {
                 // If not, plain date, no timezone
-                StringBuilder sb = new StringBuilder(dateStr);
                 int timeLen = len - dateStr.lastIndexOf('T') - 1;
                 // And possible also millisecond part if missing
                 if (timeLen < 12) { // missing, or partial
+                    StringBuilder sb = new StringBuilder(dateStr);
                     switch (timeLen) {
                     case 11: sb.append('0');
                     case 10: sb.append('0');
@@ -523,17 +529,16 @@
                     default:
                         sb.append(".000");
                     }
+                    dateStr = sb.toString();
                 }
+                df = _formatISO8601_noTz;
+                formatStr = DATE_FORMAT_STR_ISO8601_NO_TZ;
-                sb.append('Z');
-                dateStr = sb.toString();
-                df = _formatISO8601_z;
-                formatStr = DATE_FORMAT_STR_ISO8601_Z;
                 if (df == null) {
                     // 10-Jun-2017, tatu: As per [databind#1651], when using this format,
                     //    must use UTC, not whatever is configured as default timezone
                     //    (because we know `Z` identifier is used)
+                    df = _formatISO8601_noTz = _cloneFormat(DATE_FORMAT_ISO8601_NO_TZ, formatStr,
+                            _timezone, _locale, _lenient);
-                    df = _formatISO8601_z = _cloneFormat(DATE_FORMAT_ISO8601_Z, formatStr,
-                            DEFAULT_TIMEZONE, _locale, _lenient);
                 }
             }
         }
@@ -594,6 +599,7 @@
         _formatRFC1123 = null;
         _formatISO8601 = null;
         _formatISO8601_z = null;
+        _formatISO8601_noTz = null;
 
         _formatPlain = null;
     }
